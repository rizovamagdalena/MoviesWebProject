@model MoviesWEB.Models.MovieDetailsVM

@{
    ViewData["Title"] = "Movie Details";
}
<style>
    .movie-poster {
        width: 100%;
        height: 500px;
        object-fit: fill;
        border-radius: 8px;
    }

    .side-section h5 {
        color: #dc3545; 
        font-weight: 600;
    }

     .review-box {
        background-color: #222;
        padding: 15px;
        border-radius: 8px;
        margin-bottom: 15px;
    }

    .review-box strong {
        color: #ffc107;
    }
</style>

<div class="container mt-4 movie-details-container">
    <div class="row">
        <!-- left side -->
        <div class="col-md-8">
            <div class="row">
                <div class="col-md-6">
                    <img src="@Model.Movie.Poster_Path" alt="@Model.Movie.Name" class="movie-poster" />
                </div>
                <div class="col-md-6">
                    <div class="bg-dark text-white p-3 rounded mb-3">
                        <h2 class="movie-title">@Model.Movie.Name</h2>
                        <p class="movie-info"><strong>Duration:</strong> @Model.Movie.Duration min</p>
                        <p class="movie-info"><strong>Genres:</strong> @Model.Movie.Genres</p>
                    </div>
                </div>
            </div>

            <div class="row mt-4">
                <div class="upcoming-screenings">
                    <h5>Upcoming Screenings</h5>
                    @if (Model.Screenings != null && Model.Screenings.Any())
                    {
                        <ul class="list-group list-group-flush">
                            @foreach (var screening in Model.Screenings)
                            {
                                <li class="list-group-item bg-dark text-white d-flex justify-content-between align-items-center">
                                    <span>@screening.Screening_Date_Time.ToString("MMMM dd, yyyy HH:mm")</span>
                                    <a class="btn btn-sm btn-outline-info" href="@Url.Action("Details", "Screenings", new { id = screening.Id })">
                                        Info & Tickets
                                    </a>
                                </li>
                            }
                        </ul>
                    }
                    else
                    {
                        <p>No upcoming screenings.</p>
                    }
                </div>
            </div>

            <div class="row">
                <!-- Reviews Section -->
                <div class="row mt-4">
                    <h5 class="mb-3">Reviews</h5>

                    @if (Model.Movie.Ratings != null && Model.Movie.Ratings.Any())
                    {
                        foreach (var rating in Model.Movie.Ratings)
                        {
                            <div class="review-box">
                                <strong>@rating.UserName</strong> rated <strong>@rating.Rating/10 ⭐</strong>
                                <p>@rating.Comment</p>
                            </div>
                        }
                    }
                    else
                    {
                        <p>No reviews yet. Be the first to review this movie!</p>
                    }
                </div>
            </div>
        </div>

        <!-- right side -->
        <div class="col-md-4 bg-dark text-white p-3 rounded mb-3">
            @if (User.IsInRole("Administrator"))
            {
                <a href="@Url.Action("Edit", "Movies", new { id = Model.Movie.Id })" class="edit-sticker" title="Edit movie">
                    <i class="bi bi-pencil"></i> Edit
                </a>
            }

            <div class="side-section">
                <h5>Plot</h5>
                <p class="movie-plot">@Model.Movie.Plot</p>
            </div>

            <div class="side-section">
                <h5>Genres</h5>
                <p>@Model.Movie.Genres</p>
            </div>

            <div class="side-section">
                <h5>Release Date</h5>
                <p>@Model.Movie.Release_Date.ToString("MMMM dd, yyyy")</p>
            </div>

            <div class="side-section">
                <h5>Duration</h5>
                <p>@Model.Movie.Duration min</p>
            </div>

            <div class="side-section">
                <h5>Actors</h5>
                <p>@Model.Movie.Actors</p>
            </div>

            <div class="side-section">
                <h5>Directors</h5>
                <p>@Model.Movie.Directors</p>
            </div>

            <div class="side-section">
                <h5>Rating</h5>
                <p><strong>Average Rating:</strong> <span id="avgRating">@Model.Movie.Rating.ToString("0.0")</span> ⭐</p>
                <br />
                <div class="mb-3">
                    <label for="ratingSelect" class="mb-1">Your Rating:</label>
                    <select id="ratingSelect" name="rating" class="form-select form-select-sm" style="width: 80px;">
                        @for (int i = 1; i <= 10; i++)
                        {
                            var isSelected = (Model.Movie.UserRating != null && Model.Movie.UserRating.Rating == i)
                            ? "selected"
                            : null;

                            <option value="@i" selected="@isSelected">@i</option>
                        }
                    </select>
                </div>

                <div class="mb-3">
                    <label for="commentInput" class="mb-1">Your Review:</label>
                    <textarea id="commentInput" class="form-control form-control-sm" rows="3">@Model.Movie.UserRating?.Comment</textarea>
                </div>

                <button id="saveReviewBtn" class="btn btn-sm btn-primary">Save Review</button>
            </div>

        </div>
    </div>
</div>

@section Scripts {
    <script>
        const movieId = @Model.Movie.Id;
        const ratingSelect = document.getElementById('ratingSelect');
        const commentInput = document.getElementById('commentInput');
        const saveBtn = document.getElementById('saveReviewBtn');

        saveBtn.addEventListener('click', async () => {
            const rating = parseInt(ratingSelect.value);
            const comment = commentInput.value;

            const response = await fetch('/Movies/UpdateRating', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                credentials: 'same-origin',
                body: JSON.stringify({ movieId: movieId, rating: rating, comment: comment })
            });

            const result = await response.json();
            if (result.success) {
                location.reload();
            } else {
                alert('Failed to save review.');
            }
        });
    </script>
}